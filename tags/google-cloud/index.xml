<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Cloud on HasselPunk</title>
    <link>/tags/google-cloud/</link>
    <description>Recent content in Google Cloud on HasselPunk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-AR</language>
    <lastBuildDate>Mon, 15 Jun 2020 18:45:14 -0300</lastBuildDate>
    
	<atom:link href="/tags/google-cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless Shiny en Google Cloud</title>
      <link>/blog/2020-06-13serverlessshinyengooglecloud/</link>
      <pubDate>Mon, 15 Jun 2020 18:45:14 -0300</pubDate>
      
      <guid>/blog/2020-06-13serverlessshinyengooglecloud/</guid>
      <description>TL;DR Es posible usar Cloud Run para deployar una aplicaci√≥n en Shiny, aunque si necesitas websocket tendr√°s que dar una vuelta m√°s y usar Cloud Run for Anthos para subir la aplicaci√≥n a un cluster de Kubernetes. Esta es mi aplicaci√≥n: demo-shiny.hasselpunk.com y aqu√≠ est√° el c√≥digo en GitHub
La idea con la que arranqu√© a esribir este post fue ir mencionando las cosas que fui haciendo para lograr correr una aplicaci√≥n de Shiny en Google Cloud usando Cloud Run en vez de levantar una m√°quina virtual que contenga al servidor.</description>
    </item>
    
    <item>
      <title>Exponiendo Funciones de R en la Nube: Parte 2</title>
      <link>/blog/exponiendofuncionesderenlanube-parte_2/</link>
      <pubDate>Fri, 20 Mar 2020 23:45:14 -0300</pubDate>
      
      <guid>/blog/exponiendofuncionesderenlanube-parte_2/</guid>
      <description>TL;DR: La configuraci√≥n de Docker necesaria para subir la API que hicimos en el posteo anterior la pueden encontrar aqu√≠: https://github.com/augustohassel/Demo-APIs üëΩ
En este segundo posteo de la serie, vamos a intentar explicar en pocas palabras (y viniendo de un ‚Äòno experto‚Äô) qu√© es Docker, para luego hacer un paso a paso que nos ayude a escribir nuestro primer Dockerfile que sirva para correr la API que hemos creado en el posteo anterior.</description>
    </item>
    
    <item>
      <title>Exponiendo Funciones de R en la Nube: Parte 1</title>
      <link>/blog/exponiendofuncionesderenlanube-parte_1/</link>
      <pubDate>Mon, 09 Mar 2020 23:45:14 -0300</pubDate>
      
      <guid>/blog/exponiendofuncionesderenlanube-parte_1/</guid>
      <description>TL;DR: El resultado final de este trabajo lo pueden encontrar en el siguiente link https://demo-api.hasselpunk.com/ üòÅ
Este ser√° el primer posteo de una serie de 3, los cuales tendr√°n dos intenciones: mostrar como exponer funciones de R en la nube y dejar por escrito ciertas recomendaciones que surgieron en el proceso de desarrollo. Estoy seguro que estos consejos servir√°n a m√°s de uno (incluso a mi ‚Äòyo‚Äô del futuro!</description>
    </item>
    
  </channel>
</rss>